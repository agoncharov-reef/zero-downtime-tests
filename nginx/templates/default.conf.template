
upstream backend {
    server app:8000 fail_timeout=0 max_fails=0;  # the backend
    server 127.0.0.1:8502 fail_timeout=0 max_fails=0 backup weight=1;  # lua holding server in the event backend is restarting
    server app:8000 fail_timeout=0 max_fails=0 backup;  # the backend
}

server {
    listen 8502;
    location / {
        content_by_lua_block {
            ngx.sleep(10);
            ngx.exit(ngx.HTTP_BAD_GATEWAY);
        }
    }
}

server {
    listen 80;

    include /etc/nginx/config_helpers/gzip.conf;

    access_log                /dev/stdout;
    error_log                 /dev/stderr info;

    client_max_body_size 100M;

    location / {
        proxy_pass_header Server;
        proxy_redirect off;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://backend;
        proxy_read_timeout 30;
        proxy_next_upstream error timeout http_502 http_504;
    }
}
